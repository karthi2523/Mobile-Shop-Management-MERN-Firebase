{"version":3,"file":"static/js/230.f06cfd68.chunk.js","mappings":"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","sources":["components/Login.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth, db } from '../firebase';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport { TextField, Button, Typography, Box, Container, Paper, Link, InputAdornment, IconButton } from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { useAuth } from '../context/AuthContext'; // Import useAuth for login context\r\n\r\nconst Login = () => {\r\n  const { login } = useAuth(); // Access login from context\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Clear previous errors\r\n\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      // Update context state with user and role\r\n      login(user); \r\n      fetchUserData(user.uid);  // Fetch user data after successful login\r\n    } catch (err) {\r\n      setError('Invalid email or password. Please try again.');\r\n      console.error('Login error:', err);\r\n    }\r\n  };\r\n\r\n  const fetchUserData = async (uid) => {\r\n    try {\r\n      const userDoc = await getDoc(doc(db, 'users', uid));\r\n      if (userDoc.exists()) {\r\n        const userData = userDoc.data();\r\n\r\n        // Redirect based on role\r\n        if (userData.role === 'manager') {\r\n          navigate('/manager-dashboard');\r\n        } else if (userData.role === 'employee') {\r\n          navigate('/employee-dashboard');\r\n        } else if (userData.role === 'serviceMan') {\r\n          navigate('/service-man-dashboard');\r\n        } else {\r\n          setError('Invalid role. Please contact support.');\r\n        }\r\n      } else {\r\n        setError('User data not found. Please contact support.');\r\n      }\r\n    } catch (error) {\r\n      setError('Error fetching user data. Please try again.');\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Paper elevation={3} sx={{ padding: 3 }}>\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n          Login\r\n        </Typography>\r\n        <form onSubmit={handleLogin}>\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => setShowPassword((prev) => !prev)} edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <Box sx={{ textAlign: 'center', marginTop: 2 }}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\r\n              Login\r\n            </Button>\r\n          </Box>\r\n          {error && (\r\n            <Typography color=\"error\" variant=\"body2\" sx={{ marginTop: 2 }} align=\"center\">\r\n              {error}\r\n            </Typography>\r\n          )}\r\n        </form>\r\n        <Box sx={{ textAlign: 'center', marginTop: 2 }}>\r\n          <Link href=\"#\" onClick={() => navigate('/signup')} variant=\"body2\">\r\n            Don't have an account? Sign Up\r\n          </Link>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["Login","login","useAuth","email","setEmail","useState","password","setPassword","error","setError","showPassword","setShowPassword","navigate","useNavigate","fetchUserData","async","userDoc","getDoc","doc","db","uid","exists","userData","data","role","console","_jsx","Container","maxWidth","children","_jsxs","Paper","elevation","sx","padding","Typography","variant","align","gutterBottom","onSubmit","e","preventDefault","user","signInWithEmailAndPassword","auth","err","TextField","label","type","fullWidth","margin","value","onChange","target","required","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","prev","edge","VisibilityOff","Visibility","Box","textAlign","marginTop","Button","color","Link","href","useThemeProps","_ref","props","name","defaultTheme","themeId","theme","useTheme","params","components","defaultProps","resolveProps","getThemeProps","createStyled","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","componentName","ContainerRoot","_objectSpread","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","xs","React","ref","className","component","classes","classesProp","other","_objectWithoutProperties","_excluded","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled","useDefaultProps"],"sourceRoot":""}
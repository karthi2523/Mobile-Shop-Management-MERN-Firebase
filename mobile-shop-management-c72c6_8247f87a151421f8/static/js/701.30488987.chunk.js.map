{"version":3,"file":"static/js/701.30488987.chunk.js","mappings":"qOAOA,MA2FA,EA3F0BA,KACxB,MAAQC,IAAgBC,EAAAA,EAAAA,UAAS,KAC1BC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAGjDK,EAAAA,EAAAA,YAAU,KACeC,WACrB,MAAMC,GAAIC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,kBAEzBC,SADsBC,EAAAA,EAAAA,IAAQL,IACTM,KAAKC,KAAIC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,EAAIJ,QAAM,IAAEM,GAAIF,EAAIE,OACrElB,EAAaY,GAGb,MAAMO,EAAWP,EAAKQ,QAAOC,GAA8B,SAAtBA,EAAKC,eACpCC,EAAWX,EAAKQ,QAAOC,GAA8B,SAAtBA,EAAKC,eAE1CnB,EAAgBgB,GAChBd,EAAgBkB,EAAS,EAG3BC,EAAgB,IAIlB,MAAMC,EAAmBC,GAClBA,EACEC,IAA2B,IAApBD,EAAUE,SAAgBC,OAAO,cADxB,KAIzB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBAGJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACH7B,EAAa+B,OAAS,GACrBH,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACG7B,EAAaa,KAAKmB,IACjBJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,EAAgBS,EAAKC,SAC1BH,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAKE,aACVJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAKG,eACVL,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAKI,cAJHJ,EAAKhB,YAUpBc,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wCAILC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACH3B,EAAa6B,OAAS,GACrBH,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACG3B,EAAaW,KAAKmB,IACjBJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,EAAgBS,EAAKC,SAC1BH,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAKE,aACVJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAKG,eACVL,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAKI,cAJHJ,EAAKhB,YAUpBc,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yCAED,C","sources":["pages/SalesProgressPage.js"],"sourcesContent":["// src/pages/SalesProgressPage.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\"; // Import the Firestore instance\r\nimport { collection, getDocs, query } from \"firebase/firestore\"; // Firestore methods\r\nimport moment from \"moment\"; // Library for date formatting\r\n\r\nconst SalesProgressPage = () => {\r\n  const [ setSalesData] = useState([]);\r\n  const [cashModeData, setCashModeData] = useState([]);\r\n  const [loanModeData, setLoanModeData] = useState([]);\r\n\r\n  // Fetch data from Firestore\r\n  useEffect(() => {\r\n    const fetchSalesData = async () => {\r\n      const q = query(collection(db, \"salesProgress\"));\r\n      const querySnapshot = await getDocs(q);\r\n      const data = querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n      setSalesData(data);\r\n\r\n      // Separate cash and loan mode data\r\n      const cashMode = data.filter(item => item.purchaseMode === \"Cash\");\r\n      const loanMode = data.filter(item => item.purchaseMode === \"Loan\");\r\n\r\n      setCashModeData(cashMode);\r\n      setLoanModeData(loanMode);\r\n    };\r\n\r\n    fetchSalesData();\r\n  });\r\n\r\n  // Function to format Firestore Timestamp\r\n  const formatTimestamp = (timestamp) => {\r\n    if (!timestamp) return null;\r\n    return moment(timestamp.seconds * 1000).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sales Progress</h1>\r\n\r\n      {/* Cash Mode Sales */}\r\n      <h2>Cash Mode Sales</h2>\r\n      {cashModeData.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Model Sold</th>\r\n              <th>Sales Amount</th>\r\n              <th>Sales Rate</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cashModeData.map((sale) => (\r\n              <tr key={sale.id}>\r\n                <td>{formatTimestamp(sale.date)}</td>\r\n                <td>{sale.modelSold}</td>\r\n                <td>{sale.salesAmount}</td>\r\n                <td>{sale.salesRate}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No cash mode sales data available.</p>\r\n      )}\r\n\r\n      {/* Loan Mode Sales */}\r\n      <h2>Loan Mode Sales</h2>\r\n      {loanModeData.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Model Sold</th>\r\n              <th>Sales Amount</th>\r\n              <th>Sales Rate</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {loanModeData.map((sale) => (\r\n              <tr key={sale.id}>\r\n                <td>{formatTimestamp(sale.date)}</td>\r\n                <td>{sale.modelSold}</td>\r\n                <td>{sale.salesAmount}</td>\r\n                <td>{sale.salesRate}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No loan mode sales data available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesProgressPage;\r\n"],"names":["SalesProgressPage","setSalesData","useState","cashModeData","setCashModeData","loanModeData","setLoanModeData","useEffect","async","q","query","collection","db","data","getDocs","docs","map","doc","_objectSpread","id","cashMode","filter","item","purchaseMode","loanMode","fetchSalesData","formatTimestamp","timestamp","moment","seconds","format","_jsxs","children","_jsx","length","sale","date","modelSold","salesAmount","salesRate"],"sourceRoot":""}
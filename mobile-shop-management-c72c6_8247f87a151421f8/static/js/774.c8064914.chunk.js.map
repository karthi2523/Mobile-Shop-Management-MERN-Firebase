{"version":3,"file":"static/js/774.c8064914.chunk.js","mappings":"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","sources":["pages/ServicemanDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  Box,\r\n  CircularProgress,\r\n  Snackbar,\r\n  Alert,\r\n  IconButton,\r\n  TextField,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { ExitToApp, Delete, WhatsApp } from \"@mui/icons-material\";  // Import WhatsApp icon\r\nimport { db } from \"../firebase\"; \r\nimport { getDoc, doc, collection, query, getDocs, updateDoc, where, deleteDoc } from \"firebase/firestore\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\n\r\nfunction ServicemanDashboard() {\r\n  const navigate = useNavigate();\r\n  const [serviceDetails, setServiceDetails] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [selectedStatuses, setSelectedStatuses] = useState({});\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [statusSnackOpen, setStatusSnackOpen] = useState(false);\r\n\r\n  const fetchServiceDetails = async () => {\r\n    setLoading(true);\r\n    const serviceRef = collection(db, \"mobileServices\");\r\n    let q = query(serviceRef);\r\n\r\n    if (selectedDate) {\r\n      const filterDate = new Date(selectedDate);\r\n      filterDate.setHours(0, 0, 0, 0);\r\n      const endDate = new Date(filterDate);\r\n      endDate.setHours(23, 59, 59, 999);\r\n\r\n      q = query(serviceRef, where(\"timestamp\", \">=\", filterDate), where(\"timestamp\", \"<=\", endDate));\r\n    }\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(q);\r\n      const serviceList = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const serviceData = doc.data();\r\n        serviceList.push({ id: doc.id, ...serviceData });\r\n\r\n        setSelectedStatuses((prevState) => ({\r\n          ...prevState,\r\n          [doc.id]: \"Select Status\",\r\n        }));\r\n      });\r\n      setServiceDetails(serviceList);\r\n    } catch (err) {\r\n      setError(\"Error fetching service details\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchEmployeeDetails = async () => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      const userDocRef = doc(db, \"users\", user.uid);\r\n      try {\r\n        const userDoc = await getDoc(userDocRef);\r\n        if (userDoc.exists()) {\r\n          const userData = userDoc.data();\r\n          setUsername(userData.username);\r\n        } else {\r\n          setError(\"User not found\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching user details\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchServiceDetails();\r\n    fetchEmployeeDetails();\r\n  }, [selectedDate]);\r\n\r\n  const handleUpdateStatus = async (serviceId) => {\r\n    const status = selectedStatuses[serviceId];\r\n    if (status === \"Select Status\") {\r\n      setError(\"Please select a valid status.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const serviceRef = doc(db, \"mobileServices\", serviceId);\r\n      await updateDoc(serviceRef, { status });\r\n      setStatusSnackOpen(true);\r\n      fetchServiceDetails();\r\n    } catch (err) {\r\n      setError(\"Error updating service status\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteService = async (serviceId) => {\r\n    try {\r\n      const serviceRef = doc(db, \"mobileServices\", serviceId);\r\n      await deleteDoc(serviceRef);\r\n      setStatusSnackOpen(true);\r\n      fetchServiceDetails();\r\n    } catch (err) {\r\n      setError(\"Error deleting service request\");\r\n    }\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    const auth = getAuth();\r\n    try {\r\n      await signOut(auth);\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      setError(\"Error signing out\");\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (serviceId, status) => {\r\n    setSelectedStatuses((prevState) => ({\r\n      ...prevState,\r\n      [serviceId]: status,\r\n    }));\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = timestamp.toDate();\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  // Updated password value handling logic\r\n  const getPasswordValue = (service) => {\r\n    if (!service) {\r\n      console.log(\"Service is undefined or null\");\r\n      return \"Not Available\";\r\n    }\r\n\r\n    const passwordType = (service.passwordType || \"\").toLowerCase(); // Convert to lowercase\r\n    console.log(\"Password Type:\", passwordType);  // Log passwordType\r\n\r\n    switch (passwordType) {\r\n      case \"pin\":\r\n        console.log(\"Pin value:\", service.pin);  // Log pin value\r\n        return service.pin || \"Not Available\";\r\n      case \"pattern\":\r\n        console.log(\"Pattern value:\", service.pattern);  // Log pattern value\r\n        return service.pattern || \"Not Available\";\r\n      case \"password\":\r\n        console.log(\"Password value:\", service.password);  // Log password value\r\n        return service.password || \"Not Available\";\r\n      default:\r\n        console.log(\"Unexpected passwordType:\", passwordType);\r\n        return \"Not Available\";\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleWhatsAppMessage = (service) => {\r\n    \r\n    const mobileNumber = service.customerMobile?.replace(/\\D/g, \"\"); \r\n  \r\n    // Validate the phone number (it should have at least 10 digits for India)\r\n    if (!mobileNumber || mobileNumber.length < 10) {\r\n      setError(\"Invalid phone number\");\r\n      return;\r\n    }\r\n  \r\n    \r\n    const countryCode = \"+91\"; \r\n  \r\n\r\n    const fullPhoneNumber = `${countryCode}${mobileNumber}`;\r\n  \r\n    \r\n    const serviceId = service.serviceId;\r\n  \r\n    \r\n    const serviceStatus = selectedStatuses[service.id] || \"இப்போது நிலை தரப்படவில்லை\"; \r\n  \r\n   \r\n    const message = `Mr Tamizha Mobiles,\\nவணக்கம் ${service.customerName},\\n\\n\r\n  உங்கள் சேவை கோரிக்கையின் நிலை குறித்து தெரிவிக்க விரும்புகிறேன். \\n\r\n  சேவை வகை: ${service.serviceType} \\n\r\n  சேவை ஐடி: ${serviceId} \\n\\n\r\n  சேவையின் நிலையை பரிசோதிக்க இங்கு கிளிக் செய்யவும்: https://mobile-shop-management-c72c6.web.app/check-service-status?serviceId=${serviceId}\\n\\n\r\n  நன்றி!`;\r\n  \r\n    \r\n    const encodedMessage = encodeURIComponent(message);\r\n  \r\n    const whatsappLink = `https://wa.me/${fullPhoneNumber}?text=${encodedMessage}`;\r\n  \r\n   \r\n    window.open(whatsappLink, \"_blank\");\r\n  };\r\n\r\n \r\n  const handleCallService = (service) => {\r\n    const mobileNumber = service.customerMobile?.replace(/\\D/g, \"\");\r\n    if (mobileNumber && mobileNumber.length >= 10) {\r\n      window.open(`tel:+91${mobileNumber}`);\r\n    } else {\r\n      setError(\"Invalid phone number for call.\");\r\n    }\r\n  };\r\n\r\n  \r\n  const handleSmsService = (service) => {\r\n    const mobileNumber = service.customerMobile?.replace(/\\D/g, \"\");\r\n    if (mobileNumber && mobileNumber.length >= 10) {\r\n      \r\n      const message = `Mr Tamizha Mobiles,\\nவணக்கம் ${service.customerName},\\n\\n\r\n      உங்கள் சேவை கோரிக்கையின் நிலை குறித்து தெரிவிக்க விரும்புகிறேன். \\n\r\n      சேவை வகை: ${service.serviceType} \\n\r\n      சேவை ஐடி: ${service.serviceId} \\n\\n\r\n      சேவையின் நிலையை பரிசோதிக்க இங்கு கிளிக் செய்யவும்: https://mobile-shop-management-c72c6.web.app/check-service-status?serviceId=${service.serviceId}\\n\\n\r\n      நன்றி!`;\r\n  \r\n    \r\n      const encodedMessage = encodeURIComponent(message);\r\n  \r\n     \r\n      const smsLink = `sms:+91${mobileNumber}?body=${encodedMessage}`;\r\n  \r\n      \r\n      window.open(smsLink, \"_blank\");\r\n    } else {\r\n      setError(\"Invalid phone number for SMS.\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ backgroundColor: \"#f7f7f7\", borderRadius: \"10px\", padding: \"20px\" }}>\r\n      <Typography variant=\"h4\" align=\"center\" sx={{ fontWeight: \"bold\", color: \"#333\", mt: 4 }}>\r\n        Serviceman Dashboard\r\n      </Typography>\r\n\r\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", mt: 2, mb: 4 }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: \"#555\" }}>\r\n          Welcome, {loading ? \"Loading...\" : username}\r\n        </Typography>\r\n        <IconButton color=\"primary\" onClick={handleSignOut} sx={{ color: \"#555\" }}>\r\n          <ExitToApp />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 4, textAlign: \"center\" }}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Filter by Date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          sx={{ width: \"50%\", backgroundColor: \"#fff\", borderRadius: \"8px\", padding: \"10px\" }}\r\n        />\r\n      </Box>\r\n\r\n      {error && (\r\n        <Snackbar open={true} autoHideDuration={6000} onClose={() => setError(\"\")}>\r\n          <Alert severity=\"error\">{error}</Alert>\r\n        </Snackbar>\r\n      )}\r\n\r\n      <Snackbar open={statusSnackOpen} autoHideDuration={3000} onClose={() => setStatusSnackOpen(false)}>\r\n        <Alert severity=\"success\">Service updated successfully!</Alert>\r\n      </Snackbar>\r\n\r\n      {loading ? (\r\n        <CircularProgress sx={{ display: \"block\", mx: \"auto\", my: 4 }} />\r\n      ) : serviceDetails.length === 0 ? (\r\n        <Typography variant=\"h6\" align=\"center\" sx={{ my: 4, color: \"#666\" }}>\r\n          No service requests found.\r\n        </Typography>\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {serviceDetails.map((service) => (\r\n            <Grid item xs={12} sm={6} md={4} key={service.id}>\r\n              <Card sx={{ borderRadius: 3, boxShadow: 4, transition: \"transform 0.2s\", \"&:hover\": { transform: \"scale(1.05)\" }, backgroundColor: \"#fff\" }}>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: \"#333\" }}>\r\n                    {service.customerName}\r\n                  </Typography>\r\n                  <Typography>Mobile: {service.mobileModel}</Typography>\r\n                  <Typography>Service Type: {service.serviceType}</Typography>\r\n                  <Typography>Amount: ₹{service.estimatedAmount}</Typography>\r\n                  <Typography>Advance: ₹{service.advanceAmount}</Typography>\r\n                  <Typography>Date: {formatDate(service.timestamp)}</Typography>\r\n                  <Typography>Notes: {service.notes || \"No notes available\"}</Typography>\r\n\r\n                  {/* Display the password type and its value */}\r\n                  <Typography>\r\n                    <strong>Password Type:</strong> {service.passwordType || \"Not Available\"}\r\n                  </Typography>\r\n                  <Typography>\r\n                    <strong>Password Value:</strong> {getPasswordValue(service)}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions sx={{ justifyContent: \"center\", paddingBottom: \"20px\" }}>\r\n                  <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\r\n                    <FormControl fullWidth sx={{ mb: 2 }}>\r\n                      <InputLabel>Status</InputLabel>\r\n                      <Select\r\n                        value={selectedStatuses[service.id] || \"Select Status\"}\r\n                        onChange={(e) => handleStatusChange(service.id, e.target.value)}\r\n                        sx={{\r\n                          backgroundColor: \"#fafafa\",\r\n                          borderRadius: \"5px\",\r\n                          boxShadow: \"none\",\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor: \"#ccc\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor: \"#3f51b5\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        {[\"Select Status\", \"Pending\", \"In Progress\", \"Completed\"].map((statusOption) => (\r\n                          <MenuItem key={statusOption} value={statusOption}>\r\n                            {statusOption}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n\r\n                    <Box sx={{ display: 'flex', gap: 1 }}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleUpdateStatus(service.id)}\r\n                        sx={{\r\n                          padding: \"10px 20px\",\r\n                          backgroundColor: \"#3f51b5\",\r\n                          \"&:hover\": {\r\n                            backgroundColor: \"#303f9f\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <IconButton color=\"error\" onClick={() => handleDeleteService(service.id)}>\r\n                        <Delete />\r\n                      </IconButton>\r\n                      <IconButton color=\"success\" onClick={() => handleWhatsAppMessage(service)}>\r\n                        <WhatsApp />\r\n                      </IconButton>\r\n                    </Box>\r\n\r\n                    {/* Call and SMS buttons */}\r\n                    <Box sx={{ display: 'flex', gap: 1, marginTop: \"10px\" }}>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={() => handleCallService(service)}\r\n                        sx={{\r\n                          padding: \"10px 20px\",\r\n                          color: \"#4caf50\",\r\n                          borderColor: \"#4caf50\",\r\n                          \"&:hover\": {\r\n                            borderColor: \"#388e3c\",\r\n                            color: \"#388e3c\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        Call\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleSmsService(service)}\r\n                        sx={{\r\n                          padding: \"10px 20px\",\r\n                          color: \"#2196f3\",\r\n                          borderColor: \"#2196f3\",\r\n                          \"&:hover\": {\r\n                            borderColor: \"#1976d2\",\r\n                            color: \"#1976d2\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        SMS\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ServicemanDashboard;\r\n"],"names":["navigate","useNavigate","serviceDetails","setServiceDetails","useState","loading","setLoading","error","setError","username","setUsername","selectedStatuses","setSelectedStatuses","selectedDate","setSelectedDate","statusSnackOpen","setStatusSnackOpen","fetchServiceDetails","async","serviceRef","collection","db","q","query","filterDate","Date","setHours","endDate","where","querySnapshot","getDocs","serviceList","forEach","doc","serviceData","data","push","_objectSpread","id","prevState","err","useEffect","user","getAuth","currentUser","userDocRef","uid","userDoc","getDoc","exists","userData","fetchEmployeeDetails","getPasswordValue","service","console","log","passwordType","toLowerCase","pin","pattern","password","_jsxs","Container","maxWidth","sx","backgroundColor","borderRadius","padding","children","_jsx","Typography","variant","align","fontWeight","color","mt","Box","display","justifyContent","alignItems","mb","IconButton","onClick","auth","signOut","ExitToApp","textAlign","TextField","type","label","value","onChange","e","target","InputLabelProps","shrink","width","Snackbar","open","autoHideDuration","onClose","Alert","severity","CircularProgress","mx","my","length","Grid","container","spacing","map","item","xs","sm","md","Card","boxShadow","transition","transform","CardContent","customerName","mobileModel","serviceType","estimatedAmount","advanceAmount","timestamp","toDate","toLocaleDateString","notes","CardActions","paddingBottom","flexDirection","FormControl","fullWidth","InputLabel","Select","handleStatusChange","serviceId","status","borderColor","statusOption","MenuItem","gap","Button","updateDoc","handleUpdateStatus","deleteDoc","handleDeleteService","Delete","_service$customerMobi","mobileNumber","customerMobile","replace","fullPhoneNumber","concat","message","encodedMessage","encodeURIComponent","whatsappLink","window","handleWhatsAppMessage","WhatsApp","marginTop","_service$customerMobi2","handleCallService","_service$customerMobi3","smsLink","handleSmsService"],"sourceRoot":""}